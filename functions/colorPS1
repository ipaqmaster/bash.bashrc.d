#!/bin/bash
# Includes colorPS1 and batCapacity for extra shell prompt battery info on Laptops.
# Slightly overengineered
declare -A colors
colors[none]=0
colors[Black]=30
colors[Red]=31
colors[Green]=32
colors[Yellow]=33
colors[Blue]=34
colors[Magenta]=35 
colors[Cyan]=36
colors[LightGray]=37
colors[Gray]=90
colors[LightRed]=91
colors[LightGreen]=92
colors[LightYellow]=93
colors[LightBlue]=94
colors[LightMagenta]=95
colors[LightCyan]=96
colors[White]=97
  
declare -A modifiers
modifiers[none]=0 
modifiers[bold]=1
modifiers[dim]=2
modifiers[italic]=3
modifiers[underline]=4
modifiers[blinking]=5
modifiers[inverse]=7
modifiers[hidden]=8
modifiers[strikethrough]=9

function colorPS1 {
  while [ $# -gt 0 ]
  do
    case "$(tr '[:upper:]' '[:lower:]'<<<$1)" in
      -color)
        color=$2
        shift
      ;;
      -location)
        location=$2
        shift
      ;;
      -modifier)
        modifier=$2
        shift
      ;;
      -target)
        target=$(sed -e 's/\\/\\\\/g' -e 's/\ /\\ /g' -e 's/\$/\\$/g' <<< $2)
        shift
      ;;
      *)
        echo "Unknown argument $1 for the colorPS1 bashrc function"
        shift
      ;;
    esac
    shift
  done

  [ -z "$modifier" ] && modifier=none
  modifierToApply=${modifiers[$modifier]}

  [ -z "$color" ] && color=none
  colorToApply=${colors[$color]}

  [[ "$location" == "background" ]] && colorToApply=$(($colorToApply + 10)) # Background offset

  application="\\\[\\\e[${modifierToApply}\;${colorToApply}m\\\]"
  end="\\\[\\\e[0m\\\] " # Always clear after coloring something


  PS1=$(sed "s,${target},${application}${target}${end},g" <<< "$PS1")
}

  # Spits out battery percentage with icon to indicate charging/charged/AC but not charging, etc
  # Used in my $PS1
function batCapacity {
  batteryPath=/sys/class/power_supply/BAT0
  if [ -d "$batteryPath" ]
  then
    declare -A fields
    fields[capacity]='%'

    if [ -f $batteryPath/status ]
    then
      case $(</sys/class/power_supply/BAT0/status) in
        Discharging)
          echo -ne '⌄'
          ;;
        Charging)
          echo -ne '⌃'
          ;;
        'Not charging')
          echo -ne '~'
          ;;
        Charged)
          echo -ne '✓'
          ;;
        *)
          echo -ne "$(</sys/class/power_supply/BAT0/status)"
          ;;
      esac
    fi

    for field in ${!fields[@]}
      do cat ${batteryPath}/${field} | tr -d '\n' ; echo -n "${fields[$field]} "
    done
  fi
}


# Example uncolored PS1 variable and conditions for a different colored prompt for root, or red prompts for Root,
# otherwise for computers with 'Desktop' or 'Laptop' in their hostname

PS1='\t \u@\h$(batCapacity)\w \$'
if [ $(id -u) -eq 0 ]
then
    colorPS1 -target '\u@\h' -color Red -modifier italic
elif [[ $HOSTNAME == *"desktop"* ]]
then
    colorPS1 -target '\u@\h' -color Blue -modifier bold
elif [[ $HOSTNAME == *"laptop"* ]]
then
    colorPS1 -target '\u@\h' -color Green -modifier bold
fi


